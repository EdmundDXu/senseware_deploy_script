function print(){
	Func="${1} ${2} ${3}"
	num="1"
	for ((i=1;i<=$#;i++)); do
		echo ${!i} #此处的!用于间接取值，类似于指针。我们的本意是取得位置变量$1 $2 $3，由于此处在循环中，所以我们使用i替换1 2 3
		echo ${i}  #但是如果我们直接使用${i}的话，就会被识别成取得i的值，而不是取得${1} ${2} ${3}的值了
		echo ${1} #而使用${!i}可以让我们的${!i}被识别做${1} ${2} ${3}
		#echo ${${i}} #其实就类似于${${i}}，但是shell不允许这么使用，所以我们使用${!i}
	done
}

function print2(){
	Func=${1}
	for i in ${Func}; do
		echo ${i}
	done
}

FUNC=("aaa a" "bbb b" "ccc c")
echo '${FUNC[@]}'
print "${FUNC[@]}" #而如果使用@，则是将数组的每一个项都作为一个字符串传递，所以方法print接收到的就是一堆的位置参数，从$1开始，也就是说，数组有几项，print方法就能够接收到几个位置参数，所以我们只需要取出所有的位置参数，就能够得到原本的数组。结论就是我们可以使用@保留包含空格的数组。
echo '${FUNC[*]}'
print2 "${FUNC[*]}" #可以看出*可以将数组变成一整个字符串传递，所以传递到方法print2中后，Func接收到的就是一个字符串，使用for循环输出时只能根据空格区分参数，但是实际上我们的参数只有3个，每个都包含一个空格，而for循环却根据空格划分输出了6个参数。结论就是我们无法使用*保留包含空格的数组，对于不包含空格的数组，我们可以使用*。

